name: Build

on:
  workflow_dispatch:

  push:
    branches:
      - master
    tags:
      - v*

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write
      pull-requests: write
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Make directory for build files
        shell: bash
        run: mkdir dist
      
      - name: Create bogus file
        shell: bash
        run: echo "This is a bogus file" > dist/bogus.txt

      # Get tag to use, create it if it doesn't exist, create changelog, create release, upload artifacts (dist/** and README.md), and notify discord
      - name: Git Version
        id: version
        uses: codacy/git-version@2.7.1

      - name: Create tag
        if: steps.version.outputs.tag == ''
        shell: bash
        run: git tag ${{ steps.version.outputs.version }}
      
      - name: Create changelog
        if: steps.version.outputs.tag == ''
        shell: bash
        run: |
          git log --pretty=format:"%s" --reverse ${{ steps.version.outputs.previous_version }}..${{ steps.version.outputs.version }} > CHANGELOG.md
      
      - name: Compress build files
        if: steps.version.outputs.tag == ''
        shell: bash
        run: |
          echo "tar -czvf release-${{ steps.version.outputs.version }}.tar.gz -C / dist/*"
          tar -czvf release-${{ steps.version.outputs.version }}.tar.gz -C / dist/*
          echo "sudo apt install zip -y"
          sudo apt install zip -y
          echo "cd dist"
          cd dist
          echo "zip -r release-${{ steps.version.outputs.version }}.zip *"
          zip -r release-${{ steps.version.outputs.version }}.zip *
      
      - name: Create release
        if: steps.version.outputs.tag == ''
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-${{ steps.version.outputs.version }}.tar.gz
            release-${{ steps.version.outputs.version }}.zip
            README.md
          name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
